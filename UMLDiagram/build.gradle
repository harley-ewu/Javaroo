plugins {
    id 'java'
    id 'application'
    //id 'org.javamodularity.moduleplugin' version '1.8.12'
    id "org.openjfx.javafxplugin" version "0.1.0"
    id "org.beryx.jlink" version "3.0.0"
}

group 'javaroo'
version '1.0'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.2'
}


tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'javaroo.umldiagram'
    mainClass = 'javaroo.umldiagram.UMLDiagramGUI'
}


tasks.register('runMain2', JavaExec) {
    mainClass.set('javaroo.cmd.UMLMenu')
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
}

javafx {
    version = "21.0.1"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}


dependencies {

    implementation 'junit:junit:4.13.2'
    implementation 'junit:junit-dep:4.11'
    implementation 'junit:junit-dep:4.11'
    implementation 'junit:junit:4.13.2'
    implementation 'junit:junit:4.13.2'
    implementation 'junit:junit:4.13.2'
    implementation 'junit:junit:4.13.2'
    implementation 'junit:junit:4.13.2'
    implementation 'junit:junit-dep:4.11'
    implementation 'org.junit:junit-console:5.0.0-ALPHA'
    implementation 'org.junit:junit-console:5.0.0-ALPHA'
    implementation 'junit:junit:4.13.2'
    implementation 'junit:junit:4.13.2'
    implementation 'junit:junit-dep:4.11'
    implementation 'junit:junit-dep:4.11'
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    implementation 'com.google.code.gson:gson:2.8.9'
     testImplementation group: 'org.mockito', name: 'mockito-core', version: '5.2.0'
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: '5.2.0'
    // byte-buddy is an optional dependency. Mockito brings it, but an old version can cause problems. We need at least 1.12.9
    testImplementation group: 'net.bytebuddy', name: 'byte-buddy', version: '1.14.4'
}


test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}



jlinkZip {
    group = 'distribution'
}
